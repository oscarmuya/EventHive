# Generated by Django 5.2.5 on 2025-08-21 16:02

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.CharField(help_text='Event ID from Event Service', max_length=255)),
                ('user_id', models.CharField(help_text='User ID from JWT token', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the booking', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount for all tickets in this booking', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_url', models.URLField(blank=True, help_text='Payment URL returned from payment service', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_id'], name='bookingserv_event_i_454d22_idx'), models.Index(fields=['user_id'], name='bookingserv_user_id_c338a4_idx'), models.Index(fields=['status'], name='bookingserv_status_eeb32e_idx'), models.Index(fields=['created_at'], name='bookingserv_created_e3f5f3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_type', models.CharField(help_text="Type of ticket (e.g., 'VIP', 'General', 'Student')", max_length=100)),
                ('quantity', models.PositiveIntegerField(help_text='Number of tickets of this type', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per individual ticket', max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Total price for this ticket type (quantity * unit_price)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('booking', models.ForeignKey(help_text='The booking this ticket belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='bookingservice.booking')),
            ],
            options={
                'ordering': ['ticket_type'],
                'indexes': [models.Index(fields=['booking'], name='bookingserv_booking_a7681c_idx'), models.Index(fields=['ticket_type'], name='bookingserv_ticket__db1adf_idx')],
                'unique_together': {('booking', 'ticket_type')},
            },
        ),
    ]
