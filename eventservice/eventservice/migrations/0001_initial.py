# Generated by Django 5.2.5 on 2025-08-17 20:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_id', models.BigIntegerField(db_index=True, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('last_synced', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('address_1', models.CharField(max_length=255)),
                ('address_2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('postal_code', models.CharField(blank=True, max_length=50)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField(db_index=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('cancelled', 'Cancelled')], db_index=True, default='draft', max_length=10)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='event_covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='eventservice.organization')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='eventservice.venue')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_total', models.PositiveIntegerField(default=0)),
                ('quantity_sold', models.PositiveIntegerField(default=0)),
                ('sales_start', models.DateTimeField(blank=True, null=True)),
                ('sales_end', models.DateTimeField(blank=True, null=True)),
                ('per_person_limit', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='eventservice.event')),
            ],
            options={
                'ordering': ['-price'],
                'constraints': [models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='ticket_price_nonnegative'), models.CheckConstraint(condition=models.Q(('quantity_total__gte', 0)), name='ticket_qty_total_nonnegative'), models.CheckConstraint(condition=models.Q(('quantity_sold__gte', 0)), name='ticket_qty_sold_nonnegative'), models.CheckConstraint(condition=models.Q(('quantity_sold__lte', models.F('quantity_total'))), name='ticket_sold_lte_total')],
            },
        ),
    ]
